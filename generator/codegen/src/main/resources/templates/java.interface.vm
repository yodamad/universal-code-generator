package $class.namespace;

#foreach ($import in $class.imports)
	import $import;
#end

$class.visibility $class.type $class.name #if (!$interfaces.isEmpty) implements #foreach ($interface in $interface) $interface #if ($foreach.hasNext), #end #end #end #if ($extension != "") extends $extension #end {

	#foreach ($method in $methods) 
	/**
	  * $method.summary.
	  #foreach ($param in $method.params)
	  * @param $param.name $param.doc
	  #end
	  #if ($return != null)
	  * @return $method.return.doc
	  #end
	  */
	#foreach ($annotation in $method.annotations)
	@$annotation.name#if (!$annotations.params.isEmpty()) (#foreach ($param in $annotation.params) $param.name = $param.value #if ($foreach.hasNext), #end #end) #end
	$method.visibility $method.return.type $method.name (#foreach ($param in $method.params) $param.type $param.name #if ($foreach.hasNext), #end #end);
}
 